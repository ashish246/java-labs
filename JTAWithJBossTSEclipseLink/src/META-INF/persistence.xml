<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">

	<persistence-unit name="Example1PU" transaction-type="JTA">

		<class>com.jta.demo.Course</class>

		<properties>
			<!-- <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" 
				/> <property name="hibernate.hbm2ddl.auto" value="create-drop" /> <property 
				name="hibernate.jndi.class" value="org.jnp.interfaces.NamingContextFactory" 
				/> <property name="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform" 
				/> -->

			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/test" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="1729" />

			<!-- EclipseLink should create the database schema automatically. After 
				the first call you need to remove the property "eclipselink.ddl-generation" 
				from persistence.xml otherwise you will receive an error as EclipseLink tries 
				to create the database scheme again. Alternative you could set the property 
				to "drop-and-create-tables" but this would drop your database schema at every 
				run. -->

			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="database" />
		</properties>
	</persistence-unit>

</persistence>
